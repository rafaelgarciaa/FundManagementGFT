package com.fondosGFT.fondosGFT.model.client.dto;

import com.fondosGFT.fondosGFT.model.investment.dto.InvestmentDTO;
import com.pruebagft.gestionFondosGFT.util.enums.NotificationType;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.math.BigDecimal;
import java.util.List;

/**
 * Data Transfer Object (DTO) representing a client's information.
 * This DTO is used to transfer client data between different layers of the application,
 * typically between the controller and service layers, or for API responses.
 * It encapsulates core client attributes, including personal details, financial status,
 * notification preferences, and a summary of their active investments.
 *
 * <p>Lombok annotations are used to reduce boilerplate code:</p>
 * <ul>
 * <li>{@code @Data}: Automatically generates getters, setters, {@code equals()}, {@code hashCode()}, and {@code toString()} methods.</li>
 * <li>{@code @NoArgsConstructor}: Generates a constructor with no arguments.</li>
 * <li>{@code @AllArgsConstructor}: Generates a constructor with arguments for all fields.</li>
 * </ul>
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
public class ClientDTO {

    /**
     * The unique identifier for the client.
     * This ID is typically generated by the persistence layer (e.g., MongoDB).
     */
    private String id;

    /**
     * The first name of the client.
     */
    private String firstName;

    /**
     * The last name of the client.
     */
    private String lastName;

    /**
     * The city where the client resides.
     */
    private String city;

    /**
     * The current total balance of the client across all their accounts or funds.
     */
    private BigDecimal currentBalance;

    /**
     * The client's preferred method for receiving notifications (e.g., EMAIL, SMS, NONE).
     * @see NotificationType
     */
    private NotificationType notificationPreference;

    /**
     * A list of active investments held by the client.
     * Each investment is represented by an {@link InvestmentDTO}.
     */
    private List<InvestmentDTO> activeInvestments;

    /**
     * The primary phone number of the client.
     */
    private String phoneNumber;

    /**
     * The primary email address of the client.
     */
    private String email;
}